name: CD Pipeline - Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual deployment

jobs:
  # Deploy to Staging
  deploy-staging:
    name: Package for Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://script.google.com

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run quality gates
      run: |
        npm run lint
        npm run test:unit
        npm run verify

    - name: Package Apps Script bundle
      run: npm run build

    - name: Archive build artifacts
      run: |
        tar -czf staging-build.tgz -C build .

    - name: Upload staging artifact
      uses: actions/upload-artifact@v3
      with:
        name: staging-apps-script-bundle
        path: staging-build.tgz
        retention-days: 7

    - name: Notify deployment status
      if: always()
      run: |
        echo "üöÄ Staging bundle prepared"
        echo "üì¶ Artifact: staging-apps-script-bundle"

  # Deploy to Production
  deploy-production:
    name: Promote to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
      url: https://script.google.com

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate bundle
      run: |
        npm run verify
        npm run build

    - name: Archive production artifacts
      run: |
        tar -czf production-build.tgz -C build .

    - name: Upload production artifact
      uses: actions/upload-artifact@v3
      with:
        name: production-apps-script-bundle
        path: production-build.tgz
        retention-days: 30

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          üöÄ Automated Apps Script bundle promotion

          **Commit:** ${{ github.sha }}
          **Author:** ${{ github.actor }}
          **Workflow:** ${{ github.workflow }}
        draft: false
        prerelease: false

    - name: Notify deployment status
      if: always()
      run: |
        echo "üéâ Production bundle published"
        echo "üè∑Ô∏è  Version: v${{ github.run_number }}"

  # Post-deployment health check
  health-check:
    name: Production Health Check
    runs-on: ubuntu-latest
    needs: deploy-production
    
    steps:
    - name: Download production artifact
      uses: actions/download-artifact@v3
      with:
        name: production-apps-script-bundle

    - name: Verify packaged manifest
      run: |
        mkdir -p build
        tar -xzf production-build.tgz -C build
        node verify-deployment.js --project build --ci

    - name: Notify team
      if: always()
      run: |
        echo "üì¢ Production bundle verified"
